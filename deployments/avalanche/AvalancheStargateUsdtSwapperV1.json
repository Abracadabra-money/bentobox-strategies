{
  "address": "0x0b5E135FfBCd93F1323bdEF45c1bEa5887588dfD",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ROUTER",
      "outputs": [
        {
          "internalType": "contract JoeRouter02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STARGATE",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "path",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stgBalance",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "swapToUnderlying",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbca22347530cf48c81eb32c653c53db5c17dadae41f9c66caee998c67bca3320",
  "receipt": {
    "to": null,
    "from": "0xfB3485c2e209A5cfBDC1447674256578f1A80eE3",
    "contractAddress": "0x0b5E135FfBCd93F1323bdEF45c1bEa5887588dfD",
    "transactionIndex": 1,
    "gasUsed": "413087",
    "logsBloom": "0x
    "blockHash": "0xc3af0e27e16a67d82bd3735bb7b26c8371eb7ff6d09bfd8f9bf7482867e42c1d",
    "transactionHash": "0xbca22347530cf48c81eb32c653c53db5c17dadae41f9c66caee998c67bca3320",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 14794655,
        "transactionHash": "0xbca22347530cf48c81eb32c653c53db5c17dadae41f9c66caee998c67bca3320",
        "address": "0x2F6F07CDcf3588944Bf4C42aC74ff24bF56e7590",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x0000000000000000000000000b5e135ffbcd93f1323bdef45c1bea5887588dfd",
          "0x00000000000000000000000060ae616a2155ee3d9a68541ba4544862310933d4"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 225,
        "blockHash": "0xc3af0e27e16a67d82bd3735bb7b26c8371eb7ff6d09bfd8f9bf7482867e42c1d"
      }
    ],
    "blockNumber": 14794655,
    "cumulativeGasUsed": "4355216",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0x2F6F07CDcf3588944Bf4C42aC74ff24bF56e7590",
      "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E",
      "0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7"
    ]
  ],
  "solcInputHash": "60db090f4f8d440d9fda3cb2847988f7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ROUTER\",\"outputs\":[{\"internalType\":\"contract JoeRouter02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STARGATE\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"path\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stgBalance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"swapToUnderlying\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/strategies/stargate/AvalancheStargateSwapperV1.sol\":\"AvalancheStargateSwapperV1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@rari-capital/solmate/src/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\nabstract contract ERC20 {\\n    /*///////////////////////////////////////////////////////////////\\n                                  EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                             METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                           EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    bytes32 public constant PERMIT_TYPEHASH =\\n        keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        if (allowance[from][msg.sender] != type(uint256).max) {\\n            allowance[from][msg.sender] -= amount;\\n        }\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            bytes32 digest = keccak256(\\n                abi.encodePacked(\\n                    \\\"\\\\x19\\\\x01\\\",\\n                    DOMAIN_SEPARATOR(),\\n                    keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\\n                )\\n            );\\n\\n            address recoveredAddress = ecrecover(digest, v, r, s);\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_PERMIT_SIGNATURE\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(bytes(\\\"1\\\")),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0x058e0708ffdd2b04a17b96b5775d9fab8daa19d3cd37d26ce6c923679bf9cc9a\",\"license\":\"AGPL-3.0-only\"},\"contracts/interfaces/stargate/IStargateSwapper.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\npragma solidity >=0.6.12;\\r\\n\\r\\ninterface IStargateSwapper {\\r\\n    function swapToUnderlying(uint256 stgAmount, address recipient) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x544bb71e25d8d4c443e8cc0c318a2c9936ddc626fa7b868cd0fe386dcbae99da\",\"license\":\"BUSL-1.1\"},\"contracts/strategies/stargate/AvalancheStargateSwapperV1.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\r\\npragma solidity 0.8.7;\\r\\n\\r\\nimport \\\"@rari-capital/solmate/src/tokens/ERC20.sol\\\";\\r\\nimport \\\"../../interfaces/stargate/IStargateSwapper.sol\\\";\\r\\n\\r\\ninterface JoeRouter02 {\\r\\n    function swapExactTokensForTokens(\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256[] memory amounts);\\r\\n}\\r\\n\\r\\ncontract AvalancheStargateSwapperV1 is IStargateSwapper {\\r\\n    JoeRouter02 public constant ROUTER = JoeRouter02(0x60aE616a2155Ee3d9A68541Ba4544862310933d4);\\r\\n    ERC20 public constant STARGATE = ERC20(0x2F6F07CDcf3588944Bf4C42aC74ff24bF56e7590);\\r\\n\\r\\n    address[] public path;\\r\\n\\r\\n    constructor(address[] memory _path) {\\r\\n        for (uint256 i = 0; i < _path.length; i++) {\\r\\n            path.push(_path[i]);\\r\\n        }\\r\\n\\r\\n        STARGATE.approve(address(ROUTER), type(uint256).max);\\r\\n    }\\r\\n\\r\\n    function swapToUnderlying(uint256 stgBalance, address recipient) external override {\\r\\n        STARGATE.transferFrom(msg.sender, address(this), stgBalance);\\r\\n        ROUTER.swapExactTokensForTokens(stgBalance, 0, path, recipient, type(uint256).max);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xd132492465ffd5d0e66a5dc21e37849f095f33d9b0aa5a16e55f0957a7706b41\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516106e13803806106e183398101604081905261002f91610160565b60005b815181101561009c57600082828151811061004f5761004f61027d565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790558061009481610254565b915050610032565b5060405163095ea7b360e01b81527360ae616a2155ee3d9a68541ba4544862310933d460048201526000196024820152732f6f07cdcf3588944bf4c42ac74ff24bf56e75909063095ea7b390604401602060405180830381600087803b15801561010557600080fd5b505af1158015610119573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013d919061022b565b50506102a9565b80516001600160a01b038116811461015b57600080fd5b919050565b6000602080838503121561017357600080fd5b82516001600160401b038082111561018a57600080fd5b818501915085601f83011261019e57600080fd5b8151818111156101b0576101b0610293565b8060051b604051601f19603f830116810181811085821117156101d5576101d5610293565b604052828152858101935084860182860187018a10156101f457600080fd5b600095505b8386101561021e5761020a81610144565b8552600195909501949386019386016101f9565b5098975050505050505050565b60006020828403121561023d57600080fd5b8151801515811461024d57600080fd5b9392505050565b600060001982141561027657634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b610429806102b86000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806332fe7b26146100515780636c34ce881461008857806373460ba71461009d578063af6d1fe4146100b8575b600080fd5b61006c7360ae616a2155ee3d9a68541ba4544862310933d481565b6040516001600160a01b03909116815260200160405180910390f35b61009b61009636600461032b565b6100cb565b005b61006c732f6f07cdcf3588944bf4c42ac74ff24bf56e759081565b61006c6100c6366004610312565b6101fa565b6040516323b872dd60e01b815233600482015230602482015260448101839052732f6f07cdcf3588944bf4c42ac74ff24bf56e7590906323b872dd90606401602060405180830381600087803b15801561012457600080fd5b505af1158015610138573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015c91906102e9565b506040516338ed173960e01b81527360ae616a2155ee3d9a68541ba4544862310933d4906338ed17399061019f9085906000908190879060001990600401610367565b600060405180830381600087803b1580156101b957600080fd5b505af11580156101cd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101f59190810190610224565b505050565b6000818154811061020a57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000602080838503121561023757600080fd5b825167ffffffffffffffff8082111561024f57600080fd5b818501915085601f83011261026357600080fd5b815181811115610275576102756103dd565b8060051b604051601f19603f8301168101818110858211171561029a5761029a6103dd565b604052828152858101935084860182860187018a10156102b957600080fd5b600095505b838610156102dc5780518552600195909501949386019386016102be565b5098975050505050505050565b6000602082840312156102fb57600080fd5b8151801515811461030b57600080fd5b9392505050565b60006020828403121561032457600080fd5b5035919050565b6000806040838503121561033e57600080fd5b8235915060208301356001600160a01b038116811461035c57600080fd5b809150509250929050565b600060a082018783526020878185015260a0604085015281875480845260c0860191508860005282600020935060005b818110156103bc5784546001600160a01b031683526001948501949284019201610397565b50506001600160a01b03969096166060850152505050608001529392505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e093f1d09bcabb1902cb4a64d83b281ff0d00e0742cad10c43387ddf4b36ba8164736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806332fe7b26146100515780636c34ce881461008857806373460ba71461009d578063af6d1fe4146100b8575b600080fd5b61006c7360ae616a2155ee3d9a68541ba4544862310933d481565b6040516001600160a01b03909116815260200160405180910390f35b61009b61009636600461032b565b6100cb565b005b61006c732f6f07cdcf3588944bf4c42ac74ff24bf56e759081565b61006c6100c6366004610312565b6101fa565b6040516323b872dd60e01b815233600482015230602482015260448101839052732f6f07cdcf3588944bf4c42ac74ff24bf56e7590906323b872dd90606401602060405180830381600087803b15801561012457600080fd5b505af1158015610138573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015c91906102e9565b506040516338ed173960e01b81527360ae616a2155ee3d9a68541ba4544862310933d4906338ed17399061019f9085906000908190879060001990600401610367565b600060405180830381600087803b1580156101b957600080fd5b505af11580156101cd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101f59190810190610224565b505050565b6000818154811061020a57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000602080838503121561023757600080fd5b825167ffffffffffffffff8082111561024f57600080fd5b818501915085601f83011261026357600080fd5b815181811115610275576102756103dd565b8060051b604051601f19603f8301168101818110858211171561029a5761029a6103dd565b604052828152858101935084860182860187018a10156102b957600080fd5b600095505b838610156102dc5780518552600195909501949386019386016102be565b5098975050505050505050565b6000602082840312156102fb57600080fd5b8151801515811461030b57600080fd5b9392505050565b60006020828403121561032457600080fd5b5035919050565b6000806040838503121561033e57600080fd5b8235915060208301356001600160a01b038116811461035c57600080fd5b809150509250929050565b600060a082018783526020878185015260a0604085015281875480845260c0860191508860005282600020935060005b818110156103bc5784546001600160a01b031683526001948501949284019201610397565b50506001600160a01b03969096166060850152505050608001529392505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e093f1d09bcabb1902cb4a64d83b281ff0d00e0742cad10c43387ddf4b36ba8164736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 11352,
        "contract": "contracts/strategies/stargate/AvalancheStargateSwapperV1.sol:AvalancheStargateSwapperV1",
        "label": "path",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      }
    }
  }
}